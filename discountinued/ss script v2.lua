local orangeattack = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "KnifeProjectileOrange",
        [3] = "Spawn",
        [4] = Vector3.new()
    }
}

local heal = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "KnifeHeal"
    }
}

local SpecialHell = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "SpecialHell2"
    }
}
local beam = {
    [1] = {
        [1] = getrenv()._G.Pass,
        [2] = "YellowBeam",
        [3] = "Fire"
    }
}
game:GetService("UserInputService").InputBegan:connect(function(input, Processed)
	if not Processed then
		if input.KeyCode == Enum.KeyCode.Z then --a PC key was pressed
            for chingchong = 1, 35 do

game:GetService("ReplicatedStorage").Remotes.CharaMoves:InvokeServer(unpack(orangeattack))

end
		end
	end
end)
game:GetService("UserInputService").InputBegan:connect(function(input, Processed)
	if not Processed then
		if input.KeyCode == Enum.KeyCode.X then --a PC key was pressed
-- Script generated by SimpleSpy - credits to exx#9394

game:GetService("ReplicatedStorage").Remotes.CharaMoves:InvokeServer(unpack(heal))

		end
	end
end)

game:GetService("UserInputService").InputBegan:connect(function(input, Processed)
	if not Processed then
		if input.KeyCode == Enum.KeyCode.C then --a PC key was pressed
-- Script generated by SimpleSpy - credits to exx#9394



game:GetService("ReplicatedStorage").Remotes.CharaMoves:InvokeServer(unpack(orangeattack))





game:GetService("ReplicatedStorage").Remotes.CharaMoves:InvokeServer(unpack(SpecialHell))


game:GetService("ReplicatedStorage").Remotes.CharaMoves:InvokeServer(unpack(beam))

		end
	end
end)

local mt = getrawmetatable(game) 
local oldNamecall = mt.__namecall 
local oldIndex = mt.__index 
local oldNewIndex = mt.__newindex 
local lasthittick = tick()
setreadonly(mt,false) 
mt.__namecall = function(self, ...) 
	local method = tostring(getnamecallmethod()) 
	local args = {...} 
	if args[2] == "TakeStamina" then
		return
	end
	if method == "Kick" then 
		return 
	end
	return oldNamecall(self, unpack(args)) 
end	